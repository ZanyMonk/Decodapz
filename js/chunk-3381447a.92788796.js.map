{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./src/types/MultichoiceSetting.ts","webpack:///./src/encoders/base64.ts","webpack:///./node_modules/core-js/modules/es.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./src/types/GenericSetting.ts"],"names":["fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","toString","getMethod","callRegExpExec","regexpExec","stickyHelpers","fails","UNSUPPORTED_Y","arrayPush","push","min","Math","MAX_UINT32","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","exec","apply","this","arguments","result","split","length","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","RegExp","source","slice","index","test","O","splitter","rx","S","res","done","value","C","unicodeMatching","p","q","A","e","z","i","global","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","prototype","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","config","choices","key","GenericSetting","settings","mode","label","alwaysShow","standard","Base64","STANDARD_PATTERN","urlSafe","base64","fromCharset","toCharset","console","log","dict","from","charAt","replace","c","charset","translate","enc","stringify","Utf8","parse","STANDARD_CHARSET","expandPattern","pattern","map","s","charCodeAt","a","b","String","fromCharCode","diff","Encoder","DESCRIPTORS","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","getFlags","redefine","hasOwn","enforceInternalState","enforce","setSpecies","wellKnownSymbol","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","MATCH","NativeRegExp","RegExpPrototype","IS_NCG","re1","re2","CORRECT_NEW","BASE_FORCED","handleDotAll","chr","brackets","handleNCG","named","names","ncg","groupid","groupname","SyntaxError","RegExpWrapper","rawFlags","dotAll","handled","state","thisIsRegExp","patternIsRegExp","flagsAreUndefined","groups","rawPattern","constructor","indexOf","raw","proxy","configurable","get","set","it","keys","$","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","icon","join"],"mappings":"gHACA,IAAIA,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAqB,EAAQ,QAC7BC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBC,EAAiB,EAAQ,QACzBC,EAAa,EAAQ,QACrBC,EAAgB,EAAQ,QACxBC,EAAQ,EAAQ,QAEhBC,EAAgBF,EAAcE,cAC9BC,EAAY,GAAGC,KACfC,EAAMC,KAAKD,IACXE,EAAa,WAIbC,GAAqCP,GAAM,WAE7C,IAAIQ,EAAK,OACLC,EAAeD,EAAGE,KACtBF,EAAGE,KAAO,WAAc,OAAOD,EAAaE,MAAMC,KAAMC,YACxD,IAAIC,EAAS,KAAKC,MAAMP,GACxB,OAAyB,IAAlBM,EAAOE,QAA8B,MAAdF,EAAO,IAA4B,MAAdA,EAAO,MAI5D1B,EAA8B,SAAS,SAAU6B,EAAOC,EAAaC,GACnE,IAAIC,EAqDJ,OAzCEA,EAV2B,KAA3B,OAAOL,MAAM,QAAQ,IAEc,GAAnC,OAAOA,MAAM,QAAS,GAAGC,QACO,GAAhC,KAAKD,MAAM,WAAWC,QACU,GAAhC,IAAID,MAAM,YAAYC,QAEtB,IAAID,MAAM,QAAQC,OAAS,GAC3B,GAAGD,MAAM,MAAMC,OAGC,SAAUK,EAAWC,GACnC,IAAIC,EAAS5B,EAASJ,EAAuBqB,OACzCY,OAAgBC,IAAVH,EAAsBhB,EAAagB,IAAU,EACvD,GAAY,IAARE,EAAW,MAAO,GACtB,QAAkBC,IAAdJ,EAAyB,MAAO,CAACE,GAErC,IAAKlC,EAASgC,GACZ,OAAOH,EAAYQ,KAAKH,EAAQF,EAAWG,GAE7C,IAQIG,EAAOC,EAAWC,EARlBC,EAAS,GACTC,GAASV,EAAUW,WAAa,IAAM,KAC7BX,EAAUY,UAAY,IAAM,KAC5BZ,EAAUa,QAAU,IAAM,KAC1Bb,EAAUc,OAAS,IAAM,IAClCC,EAAgB,EAEhBC,EAAgB,IAAIC,OAAOjB,EAAUkB,OAAQR,EAAQ,KAEzD,MAAOJ,EAAQ7B,EAAW4B,KAAKW,EAAed,GAAS,CAErD,GADAK,EAAYS,EAAcT,UACtBA,EAAYQ,IACdN,EAAO3B,KAAKoB,EAAOiB,MAAMJ,EAAeT,EAAMc,QAC1Cd,EAAMX,OAAS,GAAKW,EAAMc,MAAQlB,EAAOP,QAAQd,EAAUS,MAAMmB,EAAQH,EAAMa,MAAM,IACzFX,EAAaF,EAAM,GAAGX,OACtBoB,EAAgBR,EACZE,EAAOd,QAAUQ,GAAK,MAExBa,EAAcT,YAAcD,EAAMc,OAAOJ,EAAcT,YAK7D,OAHIQ,IAAkBb,EAAOP,QACvBa,GAAeQ,EAAcK,KAAK,KAAKZ,EAAO3B,KAAK,IAClD2B,EAAO3B,KAAKoB,EAAOiB,MAAMJ,IACzBN,EAAOd,OAASQ,EAAMM,EAAOU,MAAM,EAAGhB,GAAOM,GAG7C,IAAIf,WAAMU,EAAW,GAAGT,OACjB,SAAUK,EAAWC,GACnC,YAAqBG,IAAdJ,GAAqC,IAAVC,EAAc,GAAKJ,EAAYQ,KAAKd,KAAMS,EAAWC,IAEpEJ,EAEhB,CAGL,SAAeG,EAAWC,GACxB,IAAIqB,EAAIpD,EAAuBqB,MAC3BgC,OAAwBnB,GAAbJ,OAAyBI,EAAY7B,EAAUyB,EAAWJ,GACzE,OAAO2B,EACHA,EAASlB,KAAKL,EAAWsB,EAAGrB,GAC5BF,EAAcM,KAAK/B,EAASgD,GAAItB,EAAWC,IAOjD,SAAUC,EAAQD,GAChB,IAAIuB,EAAKvD,EAASsB,MACdkC,EAAInD,EAAS4B,GACbwB,EAAM5B,EAAgBC,EAAeyB,EAAIC,EAAGxB,EAAOF,IAAkBF,GAEzE,GAAI6B,EAAIC,KAAM,OAAOD,EAAIE,MAEzB,IAAIC,EAAI1D,EAAmBqD,EAAIP,QAE3Ba,EAAkBN,EAAGX,QACrBH,GAASc,EAAGb,WAAa,IAAM,KACtBa,EAAGZ,UAAY,IAAM,KACrBY,EAAGX,QAAU,IAAM,KACnBjC,EAAgB,IAAM,KAI/B2C,EAAW,IAAIM,EAAEjD,EAAgB,OAAS4C,EAAGN,OAAS,IAAMM,EAAId,GAChEP,OAAgBC,IAAVH,EAAsBhB,EAAagB,IAAU,EACvD,GAAY,IAARE,EAAW,MAAO,GACtB,GAAiB,IAAbsB,EAAE9B,OAAc,OAAuC,OAAhCnB,EAAe+C,EAAUE,GAAc,CAACA,GAAK,GACxE,IAAIM,EAAI,EACJC,EAAI,EACJC,EAAI,GACR,MAAOD,EAAIP,EAAE9B,OAAQ,CACnB4B,EAAShB,UAAY3B,EAAgB,EAAIoD,EACzC,IACIE,EADAC,EAAI3D,EAAe+C,EAAU3C,EAAgB6C,EAAEN,MAAMa,GAAKP,GAE9D,GACQ,OAANU,IACCD,EAAInD,EAAIV,EAASkD,EAAShB,WAAa3B,EAAgBoD,EAAI,IAAKP,EAAE9B,WAAaoC,EAEhFC,EAAI5D,EAAmBqD,EAAGO,EAAGF,OACxB,CAEL,GADAG,EAAEnD,KAAK2C,EAAEN,MAAMY,EAAGC,IACdC,EAAEtC,SAAWQ,EAAK,OAAO8B,EAC7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAExC,OAAS,EAAGyC,IAEjC,GADAH,EAAEnD,KAAKqD,EAAEC,IACLH,EAAEtC,SAAWQ,EAAK,OAAO8B,EAE/BD,EAAID,EAAIG,GAIZ,OADAD,EAAEnD,KAAK2C,EAAEN,MAAMY,IACRE,OAGT/C,EAAmCN,I,uBCpJvC,IAAIyD,EAAS,EAAQ,QACjBC,EAAe,EAAQ,QACvBC,EAAwB,EAAQ,QAChCC,EAAU,EAAQ,QAClBC,EAA8B,EAAQ,QAEtCC,EAAkB,SAAUC,GAE9B,GAAIA,GAAuBA,EAAoBH,UAAYA,EAAS,IAClEC,EAA4BE,EAAqB,UAAWH,GAC5D,MAAOI,GACPD,EAAoBH,QAAUA,IAIlC,IAAK,IAAIK,KAAmBP,EACtBA,EAAaO,IACfH,EAAgBL,EAAOQ,IAAoBR,EAAOQ,GAAiBC,WAIvEJ,EAAgBH,I,oCCpBhB,IAAIQ,EAAW,EAAQ,QAAgCP,QACnDQ,EAAsB,EAAQ,QAE9BC,EAAgBD,EAAoB,WAIxCE,EAAOC,QAAWF,EAGd,GAAGT,QAH2B,SAAiBY,GACjD,OAAOL,EAASxD,KAAM6D,EAAY5D,UAAUG,OAAS,EAAIH,UAAU,QAAKY,K,iRCKpE,E,wDAGF,WAAYiD,GAAgC,oCACxC,cAAMA,GACN,EAAKC,QAAUD,EAAOC,SAAW,GAFO,E,0CAK5C,SAAIC,GACA,GAAMA,KAAOhE,KAAK+D,QAClB,OAAO/D,KAAK+D,QAAQC,O,GAVKC,EAAA,MAclB,ICxBF,EAAb,yG,0BACE,EAAAC,SAAW,CACTC,KAAM,IAAI,EAAmB,CAC3BC,MAAO,GACPC,YAAY,EACZhC,MAAO,KACP0B,QAAS,CACPO,SAAU,CACRF,MAAO,sBACP/B,MAAOkC,EAAOC,kBAEhBC,QAAS,CACPL,MAAO,yBACP/B,MAAO,oBAbjB,kDAuCE,SAAUqC,EAAgBC,EAAqBC,GAM7C,GALAC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAGRD,EAAYvE,SAAWwE,EAAUxE,OAAQ,OAAO,EACpD,GAAIuE,IAAgBC,EAAW,OAAOF,EAEtC,IAAMK,EAA8B,GAKpC,OAJAJ,EAAYxE,MAAM,IAAI8C,SAAQ,SAAC+B,EAAMnD,GACnCkD,EAAKC,GAAQJ,EAAUK,OAAOpD,MAGzB6C,EAAOQ,QAAQ,IAAIxD,OAAO,IAAMiD,EAAc,IAAK,MAAM,SAACQ,GAAD,OAAOJ,EAAKI,IAAMA,OArDtF,oBAwDE,SAAOxE,GACL,IAAIyE,EAAUpF,KAAKkE,SAASC,KAAKJ,QAAQO,SAASjC,MAOlD,OALIrC,KAAKkE,SAASC,KAAK9B,OAAS,UAAWrC,KAAKkE,SAASC,KAAK9B,QAE5D+C,EAAUpF,KAAKkE,SAASC,KAAK9B,MAAMA,OAG9BrC,KAAKqF,UACR,IAASC,IAAIf,OAAOgB,UAAU,IAASD,IAAIE,KAAKC,MAAM9E,IACtD4D,EAAOmB,iBACPnB,EAAOoB,cAAcP,MAnE7B,oBAuEE,SAAOzE,GACL,OAAO,IAAS2E,IAAIf,OAAOkB,MAAM9E,GAAQ5B,SAAS,IAASuG,IAAIE,SAxEnE,6BAmBU,WAAwC,MAAO,iBAnBzD,4BAoBU,WAAwC,OAAOjB,EAAOoB,cAAcpB,EAAOC,oBApBrF,2BAsBE,SAAqBoB,GAEnB,OADAf,QAAQC,IAAIc,IACJ,GAAKA,GAASV,QAAQ,4BAA4B,SAACnE,GACzD,MAAeA,EAAMZ,MAAM,KAAK0F,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAAW,MAAxD,sBAAOC,EAAP,KAAUC,EAAV,KAEA,GAAID,IAAMC,EAAG,OAAOC,OAAOC,aAAaH,GAIxC,IAFA,IAAMI,EAAOJ,EAAIC,GAAK,EAAI,EACtB/F,EAAS,GACJ2C,EAAImD,EAAGI,EAAO,EAAIvD,GAAKoD,EAAIpD,GAAKoD,EAAGpD,GAAKuD,EAC/ClG,GAAUgG,OAAOC,aAAatD,GAGhC,OAAO3C,SAnCb,GAA4BmG,EAAA,MA4Eb,gB,uBChFf,IAAIC,EAAc,EAAQ,QACtBxD,EAAS,EAAQ,QACjByD,EAAW,EAAQ,QACnBC,EAAoB,EAAQ,QAC5BtD,EAA8B,EAAQ,QACtCuD,EAAiB,EAAQ,QAAuCC,EAChEC,EAAsB,EAAQ,QAA8CD,EAC5EjI,EAAW,EAAQ,QACnBM,EAAW,EAAQ,QACnB6H,EAAW,EAAQ,QACnBzH,EAAgB,EAAQ,QACxB0H,EAAW,EAAQ,QACnBzH,EAAQ,EAAQ,QAChB0H,EAAS,EAAQ,QACjBC,EAAuB,EAAQ,QAA+BC,QAC9DC,EAAa,EAAQ,QACrBC,EAAkB,EAAQ,QAC1BC,EAAsB,EAAQ,QAC9BC,EAAkB,EAAQ,QAE1BC,EAAQH,EAAgB,SACxBI,EAAexE,EAAOpB,OACtB6F,EAAkBD,EAAa/D,UAE/BiE,EAAS,2CACTC,EAAM,KACNC,EAAM,KAGNC,EAAc,IAAIL,EAAaG,KAASA,EAExCpI,EAAgBF,EAAcE,cAE9BuI,EAActB,KACdqB,GAAetI,GAAiB8H,GAAuBC,GAAmBhI,GAAM,WAGhF,OAFAsI,EAAIL,IAAS,EAENC,EAAaG,IAAQA,GAAOH,EAAaI,IAAQA,GAAiC,QAA1BJ,EAAaG,EAAK,SAGjFI,EAAe,SAAUlH,GAM3B,IALA,IAIImH,EAJA1H,EAASO,EAAOP,OAChByB,EAAQ,EACR3B,EAAS,GACT6H,GAAW,EAERlG,GAASzB,EAAQyB,IACtBiG,EAAMnH,EAAOsE,OAAOpD,GACR,OAARiG,EAICC,GAAoB,MAARD,GAGH,MAARA,EACFC,GAAW,EACM,MAARD,IACTC,GAAW,GACX7H,GAAU4H,GANZ5H,GAAU,WAJVA,GAAU4H,EAAMnH,EAAOsE,SAASpD,GAYlC,OAAO3B,GAGP8H,EAAY,SAAUrH,GAWxB,IAVA,IASImH,EATA1H,EAASO,EAAOP,OAChByB,EAAQ,EACR3B,EAAS,GACT+H,EAAQ,GACRC,EAAQ,GACRH,GAAW,EACXI,GAAM,EACNC,EAAU,EACVC,EAAY,GAETxG,GAASzB,EAAQyB,IAAS,CAE/B,GADAiG,EAAMnH,EAAOsE,OAAOpD,GACR,OAARiG,EACFA,GAAYnH,EAAOsE,SAASpD,QACvB,GAAY,MAARiG,EACTC,GAAW,OACN,IAAKA,EAAU,QAAQ,GAC5B,IAAa,MAARD,EACHC,GAAW,EACX,MACF,IAAa,MAARD,EACCN,EAAO1F,KAAKnB,EAAOiB,MAAMC,EAAQ,MACnCA,GAAS,EACTsG,GAAM,GAERjI,GAAU4H,EACVM,IACA,SACF,IAAa,MAARN,GAAeK,EAClB,GAAkB,KAAdE,GAAoBvB,EAAOoB,EAAOG,GACpC,MAAM,IAAIC,YAAY,8BAExBJ,EAAMG,IAAa,EACnBJ,EAAM1I,KAAK,CAAC8I,EAAWD,IACvBD,GAAM,EACNE,EAAY,GACZ,SAEAF,EAAKE,GAAaP,EACjB5H,GAAU4H,EACf,MAAO,CAAC5H,EAAQ+H,IAKpB,GAAI1B,EAAS,SAAUqB,GAAc,CAoEnC,IAnEA,IAAIW,EAAgB,SAAgB3C,EAASzE,GAC3C,IAKIqH,EAAUC,EAAQlH,EAAQmH,EAASxI,EAAQyI,EAL3CC,EAAe5I,gBAAgBuI,EAC/BM,EAAkBpK,EAASmH,GAC3BkD,OAA8BjI,IAAVM,EACpB4H,EAAS,GACTC,EAAapD,EAGjB,IAAKgD,GAAgBC,GAAmBC,GAAqBlD,EAAQqD,cAAgBV,EACnF,OAAO3C,EA0CT,IAvCIiD,GAAmBjD,aAAmB2C,KACxC3C,EAAUA,EAAQjE,OACdmH,IAAmB3H,EAAQ,UAAW6H,EAAaA,EAAW7H,MAAQyF,EAAS9F,KAAKkI,KAG1FpD,OAAsB/E,IAAZ+E,EAAwB,GAAK7G,EAAS6G,GAChDzE,OAAkBN,IAAVM,EAAsB,GAAKpC,EAASoC,GAC5C6H,EAAapD,EAETuB,GAAuB,WAAYM,IACrCgB,IAAWtH,GAASA,EAAM+H,QAAQ,MAAQ,EACtCT,IAAQtH,EAAQA,EAAM+D,QAAQ,KAAM,MAG1CsD,EAAWrH,EAEP9B,GAAiB,WAAYoI,IAC/BlG,IAAWJ,GAASA,EAAM+H,QAAQ,MAAQ,EACtC3H,IAAQJ,EAAQA,EAAM+D,QAAQ,KAAM,MAGtCkC,IACFsB,EAAUV,EAAUpC,GACpBA,EAAU8C,EAAQ,GAClBK,EAASL,EAAQ,IAGnBxI,EAASsG,EAAkBc,EAAa1B,EAASzE,GAAQyH,EAAe5I,KAAOuH,EAAiBgB,IAE5FE,GAAUlH,GAAUwH,EAAO3I,UAC7BuI,EAAQ5B,EAAqB7G,GACzBuI,IACFE,EAAMF,QAAS,EACfE,EAAMQ,IAAMZ,EAAcV,EAAajC,GAAU4C,IAE/CjH,IAAQoH,EAAMpH,QAAS,GACvBwH,EAAO3I,SAAQuI,EAAMI,OAASA,IAGhCnD,IAAYoD,EAAY,IAE1B9F,EAA4BhD,EAAQ,SAAyB,KAAf8I,EAAoB,OAASA,GAC3E,MAAO3F,IAET,OAAOnD,GAGLkJ,EAAQ,SAAUpF,GACpBA,KAAOuE,GAAiB9B,EAAe8B,EAAevE,EAAK,CACzDqF,cAAc,EACdC,IAAK,WAAc,OAAOhC,EAAatD,IACvCuF,IAAK,SAAUC,GAAMlC,EAAatD,GAAOwF,MAIpCC,EAAO9C,EAAoBW,GAAezF,EAAQ,EAAG4H,EAAKrJ,OAASyB,GAC1EuH,EAAMK,EAAK5H,MAGb0F,EAAgB0B,YAAcV,EAC9BA,EAAchF,UAAYgE,EAC1BV,EAAS/D,EAAQ,SAAUyF,GAI7BtB,EAAW,W,oCC3LX,IAAIyC,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAAgCC,OAClDC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,UAKvDH,EAAE,CAAEK,OAAQ,QAASC,OAAO,EAAMC,QAASH,GAAuB,CAChEF,OAAQ,SAAgB/F,GACtB,OAAO8F,EAAQ3J,KAAM6D,EAAY5D,UAAUG,OAAS,EAAIH,UAAU,QAAKY,O,0ECR9DoD,G,oBAAb,WAMI,WAAYH,GAAqB,uBAHjC,KAAAO,YAAuB,EAInBrE,KAAKoE,MAAQN,EAAOM,MACpBpE,KAAKkK,KAAOpG,EAAOoG,KACnBlK,KAAKqC,MAAQyB,EAAOzB,MAT5B,6CAYI,WACI,sBAAcrC,KAAKqC,SAb3B,sBAgBI,WAA0B,IAAjB5B,EAAiB,uDAAL,MACjB,MAAO,CAACT,KAAKoE,MAAOpE,KAAKqC,OAAOuH,QAAO,SAAC9D,GAAD,OAAOI,OAAOJ,GAAG1F,UAAQ+J,KAAK1J,OAjB7E,MAqBe","file":"js/chunk-3381447a.92788796.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","import {SettingConfig} from '@/types/Setting';\nimport GenericSetting from '@/types/GenericSetting';\n\ninterface Choices {\n    [key: string]: {\n        label: string\n        value: string\n    }\n}\n\ninterface MultichoiceSettingConfig extends SettingConfig {\n    choices: Choices\n}\n\nclass MultichoiceSetting extends GenericSetting<object> {\n    choices: Choices\n\n    constructor(config: MultichoiceSettingConfig) {\n        super(config)\n        this.choices = config.choices || {}\n    }\n\n    get(key: string) {\n        if (!(key in this.choices)) return undefined\n        return this.choices[key]\n    }\n}\n\nexport default MultichoiceSetting","import CryptoJS from 'crypto-js/index'\nimport Encoder from '@/types/Encoder'\nimport MultichoiceSetting from \"@/types/MultichoiceSetting\";\n\nexport class Base64 extends Encoder {\n  settings = {\n    mode: new MultichoiceSetting({\n      label: '',\n      alwaysShow: true,\n      value: null,\n      choices: {\n        standard: {\n          label: 'Standard (RFC 4648)',\n          value: Base64.STANDARD_PATTERN\n        },\n        urlSafe: {\n          label: 'URL safe (RFC 4648 §5)',\n          value: 'A-Za-z0-9-_='\n        }\n      }\n    })\n  }\n\n  private static get STANDARD_PATTERN(): string { return 'A-Za-z0-9+/=' }\n  private static get STANDARD_CHARSET(): string { return Base64.expandPattern(Base64.STANDARD_PATTERN) }\n\n  static expandPattern(pattern: string) {\n    console.log(pattern);\n    return ('' + pattern).replace(/[a-zA-Z0-9]-[a-zA-Z0-9]/g, (match) => {\n      const [a, b] = match.split('-').map((s) => s.charCodeAt(0))\n\n      if (a === b) return String.fromCharCode(a)\n\n      const diff = a > b ? -1 : 1\n      let result = ''\n      for (let i = a; diff > 0 ? i <= b : i >= b; i += diff) {\n        result += String.fromCharCode(i)\n      }\n\n      return result\n    })\n  }\n\n  translate(base64: string, fromCharset: string, toCharset: string) {\n    console.log(base64)\n    console.log(fromCharset)\n    console.log(toCharset)\n\n    // Throw ?\n    if (fromCharset.length !== toCharset.length) return false\n    if (fromCharset === toCharset) return base64\n\n    const dict: {[index:string]: any} = {}\n    fromCharset.split('').forEach((from, index) => {\n      dict[from] = toCharset.charAt(index)\n    })\n\n    return base64.replace(new RegExp('[' + fromCharset + ']', 'g'), (c) => dict[c] || c)\n  }\n\n  encode(string: string) {\n    let charset = this.settings.mode.choices.standard.value\n\n    if (this.settings.mode.value && 'value' in this.settings.mode.value) {\n      // @ts-ignore\n      charset = this.settings.mode.value.value\n    }\n\n    return this.translate(\n        CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(string)),\n        Base64.STANDARD_CHARSET,\n        Base64.expandPattern(charset)\n    )\n  }\n\n  decode(string: string) {\n    return CryptoJS.enc.Base64.parse(string).toString(CryptoJS.enc.Utf8)\n  }\n}\n\nexport default Base64","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\n// TODO: Use only propper RegExpIdentifierName\nvar IS_NCG = /^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar BASE_FORCED = DESCRIPTORS &&\n  (!CORRECT_NEW || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {\n    re2[MATCH] = false;\n    // RegExp constructor can alter flags and IsRegExp works correct with @@match\n    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n  }));\n\nvar handleDotAll = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var brackets = false;\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      result += chr + string.charAt(++index);\n      continue;\n    }\n    if (!brackets && chr === '.') {\n      result += '[\\\\s\\\\S]';\n    } else {\n      if (chr === '[') {\n        brackets = true;\n      } else if (chr === ']') {\n        brackets = false;\n      } result += chr;\n    }\n  } return result;\n};\n\nvar handleNCG = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var named = [];\n  var names = {};\n  var brackets = false;\n  var ncg = false;\n  var groupid = 0;\n  var groupname = '';\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      chr = chr + string.charAt(++index);\n    } else if (chr === ']') {\n      brackets = false;\n    } else if (!brackets) switch (true) {\n      case chr === '[':\n        brackets = true;\n        break;\n      case chr === '(':\n        if (IS_NCG.test(string.slice(index + 1))) {\n          index += 2;\n          ncg = true;\n        }\n        result += chr;\n        groupid++;\n        continue;\n      case chr === '>' && ncg:\n        if (groupname === '' || hasOwn(names, groupname)) {\n          throw new SyntaxError('Invalid capture group name');\n        }\n        names[groupname] = true;\n        named.push([groupname, groupid]);\n        ncg = false;\n        groupname = '';\n        continue;\n    }\n    if (ncg) groupname += chr;\n    else result += chr;\n  } return [result, named];\n};\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (isForced('RegExp', BASE_FORCED)) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var groups = [];\n    var rawPattern = pattern;\n    var rawFlags, dotAll, sticky, handled, result, state;\n\n    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {\n      return pattern;\n    }\n\n    if (patternIsRegExp || pattern instanceof RegExpWrapper) {\n      pattern = pattern.source;\n      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags.call(rawPattern);\n    }\n\n    pattern = pattern === undefined ? '' : toString(pattern);\n    flags = flags === undefined ? '' : toString(flags);\n    rawPattern = pattern;\n\n    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {\n      dotAll = !!flags && flags.indexOf('s') > -1;\n      if (dotAll) flags = flags.replace(/s/g, '');\n    }\n\n    rawFlags = flags;\n\n    if (UNSUPPORTED_Y && 'sticky' in re1) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    if (UNSUPPORTED_NCG) {\n      handled = handleNCG(pattern);\n      pattern = handled[0];\n      groups = handled[1];\n    }\n\n    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n\n    if (dotAll || sticky || groups.length) {\n      state = enforceInternalState(result);\n      if (dotAll) {\n        state.dotAll = true;\n        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);\n      }\n      if (sticky) state.sticky = true;\n      if (groups.length) state.groups = groups;\n    }\n\n    if (pattern !== rawPattern) try {\n      // fails in old engines, but we have no alternatives for unsupported regex syntax\n      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);\n    } catch (error) { /* empty */ }\n\n    return result;\n  };\n\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n\n  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {\n    proxy(keys[index++]);\n  }\n\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import {Setting, SettingConfig} from \"@/types/Setting\";\n\nexport type SettingType = string | number | boolean | object;\n\nexport class GenericSetting<Type extends SettingType> implements Setting {\n    label: string\n    icon?: string\n    alwaysShow?: boolean = false\n    value: Type\n\n    constructor(config: SettingConfig) {\n        this.label = config.label\n        this.icon = config.icon\n        this.value = config.value\n    }\n\n    typeof(): string {\n        return typeof this.value;\n    }\n\n    toString(separator = ' = ') {\n        return [this.label, this.value].filter((s) => String(s).length).join(separator)\n    }\n}\n\nexport default GenericSetting"],"sourceRoot":""}